plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.41'
    id 'java-library'
}

base {
    archivesName = 'AtlasViewer-neoforge'
}

minecraft.accessTransformers.file rootProject.file('neoforge/src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run_client')
    }

    server {
        workingDirectory project.file('run_server')
        programArgument '--nogui'
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"
    compileOnly project(':common')
}

// NeoGradle compiles the game, but we don't want to add our common code to the game's code
TaskCollection.metaClass.excludingNeoTasks = { ->
    delegate.matching { !it.name.startsWith('neo') }
}

tasks.withType(JavaCompile).excludingNeoTasks().configureEach {
    source(project(':common').sourceSets.main.allSource)
}

tasks.withType(Javadoc).excludingNeoTasks().configureEach {
    source(project(':common').sourceSets.main.allJava)
}

tasks.named('sourcesJar', Jar) {
    from(project(':common').sourceSets.main.allSource)
}

tasks.withType(ProcessResources).excludingNeoTasks().configureEach {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url 'file://' + System.getenv('local_maven')
        }
    }
}
